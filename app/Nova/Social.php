<?php

namespace App\Nova;

use Laravel\Nova\Fields\ID;
use App\Nova\Actions\Active;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\MorphTo;
use Laravel\Nova\Fields\Text;
use App\Nova\Actions\Deactive;
use Laravel\Nova\Fields\Select;
use Laravel\Nova\Fields\Boolean;
use Laravel\Nova\Fields\Textarea;
use Laravel\Nova\Http\Requests\NovaRequest;

class Social extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var string
     */
    public static $model = \App\General\Social::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'name';
    public static $group = 'Setting';

    public static function group()
    {
        return __('settings'); // TODO: Change the autogenerated stub
    }
    public static function label()
    {
        return __('Socials'); // TODO: Change the autogenerated stub
    }
    public function title()
    {
        return $this['name']; // TODO: Change the autogenerated stub
    }



    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'id','name','link','icon_type','active'
    ];

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function fields(Request $request)
    {
        return [
            ID::make(__('ID'), 'id')->sortable(),

            MorphTo::make('socialable')->types([
                GeneralSettings::class,
                Company::class,
            ]),

            Text::make(__('link'),'link')
                ->rules('required', 'max:190','url')
                ->sortable(),

            Select::make(_('type'), 'icon_type')->options([
                'facebook' => __('facebook'),
                'instagram' => __('instagram'),
                'twitter' => __('twitter'),
                'snapshat' => __('snapshat'),
                'whatsapp' => __('whatsapp'),
                'googleplus' => __('googleplus'),
                'website' => __('website'),
                'linked_in' => __('linked_in'),
                'other' => __('other'),
            ]),

            Boolean::make(__('active'),'active')->trueValue(1)->falseValue(0)->sortable()->default(1),
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function cards(Request $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function filters(Request $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function lenses(Request $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function actions(Request $request)
    {
        return [
            (new Active)->confirmText(__('Are you sure you want to activate this user?'))
            ->confirmButtonText(__('Activate'))
            ->cancelButtonText(__("Don't activate")),
            (new Deactive)->confirmText(__('Are you sure you want to Deactivate this user?'))
                ->confirmButtonText(__('DeActivate'))
                ->cancelButtonText(__("Don't deactivate")),
        ];
    }
}
